var ut=Object.defineProperty;var lt=(t,e,r)=>e in t?ut(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var B=(t,e,r)=>lt(t,typeof e!="symbol"?e+"":e,r);import{u as x}from"./useQuery-fXf16oON.js";import{a1 as nt,L as $,a as w,a2 as k,a3 as Q,a4 as y}from"./index-28yYTQYt.js";function ct(t,e=!1){if(!t)return"Unknown date";const r=nt(t);return r.isValid()?e?r.format("DD MMM YYYY HH:mm"):r.format("DD MMM YYYY"):"Invalid date"}var C=63710088e-1,ht={centimeters:C*100,centimetres:C*100,degrees:360/(2*Math.PI),feet:C*3.28084,inches:C*39.37,kilometers:C/1e3,kilometres:C/1e3,meters:C,metres:C,miles:C/1609.344,millimeters:C*1e3,millimetres:C*1e3,nauticalmiles:C/1852,radians:1,yards:C*1.0936};function z(t,e,r={}){const n={type:"Feature"};return(r.id===0||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=e||{},n.geometry=t,n}function A(t,e,r={}){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!X(t[0])||!X(t[1]))throw new Error("coordinates must contain numbers");return z({type:"Point",coordinates:t},e,r)}function V(t,e,r={}){if(t.length<2)throw new Error("coordinates must be an array of two or more positions");return z({type:"LineString",coordinates:t},e,r)}function ft(t,e="kilometers"){const r=ht[e];if(!r)throw new Error(e+" units is invalid");return t*r}function J(t){return t%(2*Math.PI)*180/Math.PI}function E(t){return t%360*Math.PI/180}function X(t){return!isNaN(t)&&t!==null&&!Array.isArray(t)}function F(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if(t.type==="Feature"&&t.geometry!==null&&t.geometry.type==="Point")return[...t.geometry.coordinates];if(t.type==="Point")return[...t.coordinates]}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return[...t];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function it(t){if(Array.isArray(t))return t;if(t.type==="Feature"){if(t.geometry!==null)return t.geometry.coordinates}else if(t.coordinates)return t.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function Ut(t){return t.type==="Feature"?t.geometry:t}function yt(t,e){return t.type==="FeatureCollection"?"FeatureCollection":t.type==="GeometryCollection"?"GeometryCollection":t.type==="Feature"&&t.geometry!==null?t.geometry.type:t.type}function L(t,e,r={}){var n=F(t),i=F(e),a=E(i[1]-n[1]),u=E(i[0]-n[0]),f=E(n[1]),c=E(i[1]),l=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(u/2),2)*Math.cos(f)*Math.cos(c);return ft(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),r.units)}function at(t,e,r){if(t!==null)for(var n,i,a,u,f,c,l,h=0,o=0,p,g=t.type,m=g==="FeatureCollection",q=g==="Feature",P=m?t.features.length:1,v=0;v<P;v++){l=m?t.features[v].geometry:q?t.geometry:t,p=l?l.type==="GeometryCollection":!1,f=p?l.geometries.length:1;for(var d=0;d<f;d++){var _=0,D=0;if(u=p?l.geometries[d]:l,u!==null){c=u.coordinates;var M=u.type;switch(h=0,M){case null:break;case"Point":if(e(c,o,v,_,D)===!1)return!1;o++,_++;break;case"LineString":case"MultiPoint":for(n=0;n<c.length;n++){if(e(c[n],o,v,_,D)===!1)return!1;o++,M==="MultiPoint"&&_++}M==="LineString"&&_++;break;case"Polygon":case"MultiLineString":for(n=0;n<c.length;n++){for(i=0;i<c[n].length-h;i++){if(e(c[n][i],o,v,_,D)===!1)return!1;o++}M==="MultiLineString"&&_++,M==="Polygon"&&D++}M==="Polygon"&&_++;break;case"MultiPolygon":for(n=0;n<c.length;n++){for(D=0,i=0;i<c[n].length;i++){for(a=0;a<c[n][i].length-h;a++){if(e(c[n][i][a],o,v,_,D)===!1)return!1;o++}D++}_++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(at(u.geometries[n],e)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function gt(t,e){var r,n,i,a,u,f,c,l,h,o,p=0,g=t.type==="FeatureCollection",m=t.type==="Feature",q=g?t.features.length:1;for(r=0;r<q;r++){for(f=g?t.features[r].geometry:m?t.geometry:t,l=g?t.features[r].properties:m?t.properties:{},h=g?t.features[r].bbox:m?t.bbox:void 0,o=g?t.features[r].id:m?t.id:void 0,c=f?f.type==="GeometryCollection":!1,u=c?f.geometries.length:1,i=0;i<u;i++){if(a=c?f.geometries[i]:f,a===null){if(e(null,p,l,h,o)===!1)return!1;continue}switch(a.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(e(a,p,l,h,o)===!1)return!1;break}case"GeometryCollection":{for(n=0;n<a.geometries.length;n++)if(e(a.geometries[n],p,l,h,o)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}p++}}function st(t,e){gt(t,function(r,n,i,a,u){var f=r===null?null:r.type;switch(f){case null:case"Point":case"LineString":case"Polygon":return e(z(r,i,{bbox:a,id:u}),n,0)===!1?!1:void 0}var c;switch(f){case"MultiPoint":c="Point";break;case"MultiLineString":c="LineString";break;case"MultiPolygon":c="Polygon";break}for(var l=0;l<r.coordinates.length;l++){var h=r.coordinates[l],o={type:c,coordinates:h};if(e(z(o,i),n,l)===!1)return!1}})}function pt(t,e){st(t,function(r,n,i){var a=0;if(r.geometry){var u=r.geometry.type;if(!(u==="Point"||u==="MultiPoint")){var f,c=0,l=0,h=0;if(at(r,function(o,p,g,m,q){if(f===void 0||n>c||m>l||q>h){f=o,c=n,l=m,h=q,a=0;return}var P=V([f,o],r.properties);if(e(P,n,i,q,a)===!1)return!1;a++,f=o})===!1)return!1}}})}function mt(t,e,r){var n=r,i=!1;return pt(t,function(a,u,f,c,l){i===!1&&r===void 0?n=a:n=e(n,a,u,f,c,l),i=!0}),n}var dt=Object.defineProperty,vt=Object.defineProperties,Dt=Object.getOwnPropertyDescriptors,j=Object.getOwnPropertySymbols,Pt=Object.prototype.hasOwnProperty,_t=Object.prototype.propertyIsEnumerable,I=(t,e,r)=>e in t?dt(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,R=(t,e)=>{for(var r in e||(e={}))Pt.call(e,r)&&I(t,r,e[r]);if(j)for(var r of j(e))_t.call(e,r)&&I(t,r,e[r]);return t},T=(t,e)=>vt(t,Dt(e));function Y(t,e,r={}){if(!t||!e)throw new Error("lines and pt are required arguments");const n=F(e);let i=A([1/0,1/0],{dist:1/0,index:-1,multiFeatureIndex:-1,location:-1}),a=0;return st(t,function(u,f,c){const l=it(u);for(let h=0;h<l.length-1;h++){const o=A(l[h]);o.properties.dist=L(e,o,r);const p=F(o),g=A(l[h+1]);g.properties.dist=L(e,g,r);const m=F(g),q=L(o,g,r);let P,v;p[0]===n[0]&&p[1]===n[1]?[P,,v]=[p,void 0,!1]:m[0]===n[0]&&m[1]===n[1]?[P,,v]=[m,void 0,!0]:[P,,v]=Mt(o.geometry.coordinates,g.geometry.coordinates,F(e));let d;P&&(d=A(P,{dist:L(e,P,r),multiFeatureIndex:c,location:a+L(o,P,r)})),d&&d.properties.dist<i.properties.dist&&(i=T(R({},d),{properties:T(R({},d.properties),{index:v?h+1:h})})),a+=q}}),i}function wt(t,e){const[r,n,i]=t,[a,u,f]=e;return r*a+n*u+i*f}function qt(t,e){const[r,n,i]=t,[a,u,f]=e;return[n*f-i*u,i*a-r*f,r*u-n*a]}function tt(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2))}function b(t,e){const r=wt(t,e)/(tt(t)*tt(e));return Math.acos(Math.min(Math.max(r,-1),1))}function N(t){const e=E(t[1]),r=E(t[0]);return[Math.cos(e)*Math.cos(r),Math.cos(e)*Math.sin(r),Math.sin(e)]}function S(t){const[e,r,n]=t,i=J(Math.asin(n));return[J(Math.atan2(r,e)),i]}function Mt(t,e,r){const n=N(t),i=N(e),a=N(r),[u,f,c]=a,[l,h,o]=qt(n,i),p=h*c-o*f,g=o*u-l*c,m=l*f-h*u,q=m*h-g*o,P=p*o-m*l,v=g*l-p*h,d=1/Math.sqrt(Math.pow(q,2)+Math.pow(P,2)+Math.pow(v,2)),_=[q*d,P*d,v*d],D=[-1*q*d,-1*P*d,-1*v*d],M=b(n,i),O=b(n,_),W=b(i,_),G=b(n,D),Z=b(i,D);let K;return O<G&&O<Z||W<G&&W<Z?K=_:K=D,b(n,K)>M||b(i,K)>M?L(S(K),S(n))<=L(S(K),S(i))?[S(n),!0,!1]:[S(i),!1,!0]:[S(K),!1,!1]}var et=Y;function Ct(t,e={}){return mt(t,(r,n)=>{const i=n.geometry.coordinates;return r+L(i[0],i[1],e)},0)}var rt=Ct;function Qt(t,e,r){var n=it(r);if(yt(r)!=="LineString")throw new Error("line must be a LineString");var i=Y(r,t),a=Y(r,e),u;i.properties.index<=a.properties.index?u=[i,a]:u=[a,i];for(var f=[u[0].geometry.coordinates],c=u[0].properties.index+1;c<u[1].properties.index+1;c++)f.push(n[c]);return f.push(u[1].geometry.coordinates),V(f,r.properties)}var Lt=Qt;function Kt(t,e=2){const r=t.split(",").map(a=>a.trim()),i=r.filter(a=>!/^\d+$/.test(a)&&!/^[A-Z]\d[A-Z]\s?\d[A-Z]\d$/.test(a)&&!/^\d{5}(-\d{4})?$/.test(a)&&!/^Area [A-Z]/.test(a)&&!a.includes("Regional District")&&a.length<50&&a.length>1).slice(0,e);return i.length>0?i.join(", "):r.slice(0,2).join(", ")||r[0]||"Unknown location"}function Ot(t,e,r=50){var d,_;const n=t.map(D=>{const M=$.latLng(D);return[M.lng,M.lat]}),i=V(n),a=rt(i,{units:"kilometers"}),u=e.sortByKey("time").all.filter(D=>D.coordinates).map(D=>{var G;const M=A([D.coordinates.longitude,D.coordinates.latitude]),O=et(i,M,{units:"kilometers"}),W=((G=O.properties)==null?void 0:G.dist)??1/0;return{photo:D,snapped:O,distKm:W}}).filter(Boolean).filter(D=>D.distKm<=r);if(u.length===0)return{photoId:null,reason:`No geotagged photo within ${r} km of the route.`,progressKm:0,totalKm:a,percentage:0};const c=u[u.length-1].photo.position,l=et(i,c,{units:"kilometers"}),h=l.geometry.coordinates,o=[h[1],h[0]],p=A(n[0]),g=Lt(p,l,i),m=rt(g,{units:"kilometers"}),q=a>0?m/a:0,P=((d=l.properties)==null?void 0:d.index)??null,v=((_=l.properties)==null?void 0:_.dist)??null;return{latLng:$.latLng(o[1],o[0]),progressKm:m,percentage:q,segmentIndex:P,distanceOffRouteKm:v}}class bt{constructor(e){this.Data=e}get id(){return this.Data.id}get time(){return nt(this.Data.created_at)}get timeISO(){return this.Data.created_at}get formattedTime(){return ct(this.time)}get title(){return this.Data.title||"No title"}get coordinates(){return this.Data.latitude&&this.Data.longitude?{latitude:this.Data.latitude,longitude:this.Data.longitude,altitude:this.Data.altitude||0}:null}get latLng(){return this.Data.latitude&&this.Data.longitude?[this.Data.latitude,this.Data.longitude]:null}get position(){return this.Data.latitude&&this.Data.longitude?[this.Data.longitude,this.Data.latitude]:null}get description(){return this.Data.description||"No description"}get thumbnailUrl(){return w.getThumbnailUrl(this.Data.filename)}get originalUrl(){return w.getImageUrl(this.Data.filename)}get filename(){return this.Data.filename||"unknown.jpg"}get dimensions(){return{width:this.Data.width||0,height:this.Data.height||0}}get shortLocation(){return this.formatPhotoLocation({maxParts:2,includeCountry:!1,prioritizeLandmark:!0})}get mediumLocation(){return this.formatPhotoLocation({maxParts:3,includeCountry:"auto",prioritizeLandmark:!0})}get cameraInfo(){return{make:this.Data.camera_make||"Unknown",model:this.Data.camera_model||"Unknown",focalLength:this.Data.focal_length||"Unknown",aperture:this.Data.aperture||"Unknown",shutterSpeed:this.Data.shutter_speed||"Unknown",iso:this.Data.iso||"Unknown"}}formatPhotoLocation(e={}){const{maxParts:r=3,includeCountry:n="auto",prioritizeLandmark:i=!0,showCoordinates:a=!1}=e,u=[];return i&&this.Data.landmark&&u.push(this.Data.landmark),this.Data.city&&u.push(this.Data.city),this.Data.state&&this.Data.state!==this.Data.city&&u.push(this.Data.state),this.Data.country&&(n===!0||n==="auto"&&(u.length===0||this.Data.country_code&&!["US","CA","GB"].includes(this.Data.country_code)||u.length===1))&&u.push(this.Data.country),u.length>0?u.slice(0,r).join(", "):this.Data.location_name?Kt(this.Data.location_name,r):"Location not available"}get fullLocation(){const e=[];return this.location.landmark&&e.push(this.location.landmark),this.location.city&&e.push(this.location.city),this.location.state&&e.push(this.location.state),this.location.country&&e.push(this.location.country),e.length>0?e.join(", "):this.location.location_name||"Location not available"}get location(){return{location_name:this.Data.location_name||null,landmark:this.Data.landmark||null,city:this.Data.city||null,state:this.Data.state||null,country:this.Data.country||null,countryCode:this.Data.country_code||null,coordinates:this.Data.latitude&&this.Data.longitude?{lat:this.Data.latitude,lng:this.Data.longitude}:null,fullAddress:this.Data.location_name||null}}}class ot{findById(e){return this.all.find(r=>r.id===e)}filterByLocation(e){return this.all.filter(r=>{const n=r.coordinates;return n&&n.latitude===e.latitude&&n.longitude===e.longitude})}sortByKey(e){return new kt(this.all,e)}get last(){return this.all.at(-1)||null}get first(){return this.all.at(0)||null}get count(){return this.all.length}get hasPhotos(){return this.count>0}}class St extends ot{constructor(r){super();B(this,"photos");B(this,"hash","");this.photos=r.map(n=>new bt(n)),this.hash=this.generateHash()}generateHash(){return this.photos.map(r=>r.id).join("")}get all(){return this.photos}closestTo(r,n){const i=h=>{if(Array.isArray(h)){const[p,g]=h;return{lat:p,lng:g}}const o=h;if(typeof o.lat=="number"&&typeof o.lng=="number")return{lat:o.lat,lng:o.lng};if(typeof o.lat=="number"&&typeof o.lon=="number")return{lat:o.lat,lng:o.lon};throw new Error("Invalid LatLngExpression")},a=h=>h*Math.PI/180,u=(h,o)=>{const g=a(o.lat-h.lat),m=a(o.lng-h.lng),q=a(h.lat),P=a(o.lat),v=Math.sin(g/2),d=Math.sin(m/2),_=v*v+Math.cos(q)*Math.cos(P)*d*d;return 12742e3*Math.asin(Math.min(1,Math.sqrt(_)))},f=i(r),c=n!=null?n*1e3:void 0;let l=null;for(const h of this.all){const o=h.coordinates;if(!o)continue;const p={lat:o.latitude,lng:o.longitude},g=u(f,p);c!=null&&g>c||(!l||g<l.dist)&&(l={photo:h,dist:g})}return l?l.photo:null}nextPhoto(r){const n=this.photos.findIndex(i=>i.id===r.id);return n===-1||n===this.photos.length-1?null:this.photos[n+1]}previousPhoto(r){const n=this.photos.findIndex(i=>i.id===r.id);return n<=0?null:this.photos[n-1]}}class kt extends ot{constructor(r,n){super();B(this,"sortedPhotos");B(this,"sortKey");this.sortKey=n,this.sortedPhotos=[...r].sort((i,a)=>{switch(n){case"time":return i.time.isAfter(a.time)?-1:1;case"name":return i.title.localeCompare(a.title);default:return 0}})}get all(){return this.sortedPhotos}}const s={trips:["trips"],trip:t=>["trips",t],tripPhotos:t=>["trips",t,"photos"],photos:["photos"],photo:t=>["photos",t],photosWithCoordinates:["photos","with-coordinates"],tripsWithPhotoCounts:["trips","with-photo-counts"],statistics:["statistics"],health:["health"],routes:["routes"],route:t=>["routes",t],tripRoutes:t=>["trips",t,"routes"],routeStops:t=>["routes",t,"stops"]},U={trip:t=>{y.setQueryData(s.trip(t.id),e=>({...e,...t})),y.setQueryData(s.trips,e=>e!=null&&e.find(r=>r.id===t.id)?e==null?void 0:e.map(r=>r.id===t.id?{...r,...t}:r):[...e||[],{...t,photoCount:0}]),y.setQueryData(s.tripsWithPhotoCounts,e=>e!=null&&e.find(r=>r.id===t.id)?e==null?void 0:e.map(r=>r.id===t.id?{...r,...t}:r):[...e||[],{...t,photoCount:0}])},route:t=>{y.setQueryData(s.route(t.id),e=>({...e,...t})),y.setQueryData(s.tripRoutes(t.trip_id),e=>e!=null&&e.find(r=>r.id==t.id)?e==null?void 0:e.map(r=>r.id===t.id?{...r,...t}:r):[...e||[],t]),y.setQueryData(s.routes,e=>e!=null&&e.find(r=>r.id===t.id)?e==null?void 0:e.map(r=>r.id===t.id?{...r,...t}:r):[...e||[],t]),y.setQueryData(s.routeStops(t.id),e=>e==null?void 0:e.map(r=>r.route_id===t.id?{...r,route_id:t.id}:r))},routeStop:t=>{y.setQueryData(s.routeStops(t.route_id),e=>e!=null&&e.find(r=>r.id===t.id)?e==null?void 0:e.map(r=>r.id===t.id?{...r,...t}:r):[...e||[],t]),y.setQueryData(s.route(t.route_id),e=>{if(e)return{...e,stops:e.stops.find(r=>r.id===t.id)?e.stops.map(r=>r.id===t.id?{...r,...t}:r):[...e.stops||[],t]}})}},H={trip:t=>{y.removeQueries({queryKey:s.trip(t)}),y.removeQueries({queryKey:s.tripPhotos(t)}),y.setQueryData(s.trips,e=>e==null?void 0:e.filter(r=>r.id!==t)),y.setQueryData(s.tripsWithPhotoCounts,e=>e==null?void 0:e.filter(r=>r.id!==t)),y.setQueryData(s.photos,e=>e==null?void 0:e.filter(r=>r.trip_id!==t))},route:t=>{const e=y.getQueryData(s.route(t));y.removeQueries({queryKey:s.route(t)}),y.removeQueries({queryKey:s.routeStops(t)}),e&&y.setQueryData(s.tripRoutes(e.trip_id),r=>r==null?void 0:r.filter(n=>n.id!==t)),y.setQueryData(s.routes,r=>r==null?void 0:r.filter(n=>n.id!==t))},routeStop:(t,e)=>{y.removeQueries({queryKey:s.routeStops(t)}),y.setQueryData(s.route(t),r=>{if(r)return{...r,stops:r.stops.filter(n=>n.id!==e)}}),y.setQueryData(s.routeStops(t),r=>r==null?void 0:r.filter(n=>n.id!==e))}};function Gt(t){return x({queryKey:s.trip(t),queryFn:()=>w.getTripById(t),enabled:!!t})}function Bt(){const t=k();return Q({mutationFn:e=>w.createTrip(e),onSuccess:e=>{U.trip(e)},onSettled:()=>{t.invalidateQueries({queryKey:s.trips})}})}function xt(){return Q({mutationFn:({id:t,data:e})=>w.updateTrip(t,e),onSuccess:t=>{U.trip(t)}})}function Wt(){return Q({mutationFn:t=>w.deleteTrip(t),onSuccess:(t,e)=>{H.trip(e)}})}function zt(t){const e=x({queryKey:s.tripPhotos(t),queryFn:()=>w.getTripPhotos(t),enabled:!!t});return{...e,data:e.data?new St(e.data):void 0}}function Nt(){const t=k();return Q({mutationFn:({request:e,progress:r})=>w.uploadPhotos(e,r),onSuccess:(e,{request:r})=>{t.invalidateQueries({queryKey:s.photos}),t.invalidateQueries({queryKey:s.tripPhotos(r.tripId)}),t.invalidateQueries({queryKey:s.photosWithCoordinates}),t.invalidateQueries({queryKey:s.tripsWithPhotoCounts}),t.invalidateQueries({queryKey:s.statistics})}})}function Yt(){const t=k();return Q({mutationFn:e=>w.updatePhoto(e),onSuccess:e=>{t.setQueryData(s.photo(e.id),e),t.invalidateQueries({queryKey:s.photos}),t.invalidateQueries({queryKey:s.tripPhotos(e.trip_id)}),t.invalidateQueries({queryKey:s.photosWithCoordinates})}})}function Vt(){const t=k();return Q({mutationFn:e=>w.deletePhotos({photoIds:e}),onSuccess:(e,r)=>{r.forEach(n=>{t.removeQueries({queryKey:s.photo(n)})}),t.invalidateQueries({queryKey:s.photos}),t.invalidateQueries({queryKey:s.photosWithCoordinates}),t.invalidateQueries({queryKey:s.tripsWithPhotoCounts}),t.invalidateQueries({queryKey:s.statistics}),t.invalidateQueries({queryKey:["trips"],predicate:n=>n.queryKey.includes("photos")})}})}function Ht(){return x({queryKey:s.tripsWithPhotoCounts,queryFn:()=>w.getTripsWithPhotoCounts()})}function Zt(t){return x({queryKey:s.route(t),queryFn:()=>w.getRouteById(t),enabled:!!t})}function $t(t){return x({queryKey:s.tripRoutes(t),queryFn:()=>w.getTripRoutes(t),enabled:!!t})}function Jt(){const t=k();return Q({mutationFn:e=>w.createRoute(e),onSuccess:e=>{U.route(e)},onSettled:(e,r,{trip_id:n})=>{t.invalidateQueries({queryKey:s.tripRoutes(n)}),t.invalidateQueries({queryKey:s.routes})}})}function Xt(){const t=k();return Q({mutationFn:({id:e,data:r})=>w.updateRoute(e,r),onSuccess:e=>{U.route(e)},onSettled:(e,r,{id:n})=>{t.invalidateQueries({queryKey:s.route(n)}),t.invalidateQueries({queryKey:s.tripRoutes(n)}),t.invalidateQueries({queryKey:s.routes})}})}function jt(){const t=k();return Q({mutationFn:e=>w.deleteRoute(e),onSuccess:(e,r)=>{H.route(r)},onSettled:(e,r,n)=>{t.refetchQueries({queryKey:s.routes})}})}function It(){return Q({mutationFn:async({routeId:t,data:e})=>w.createRouteStop(t,e),onSuccess:t=>{U.route(t)},onSettled:(t,e,{routeId:r})=>{y.invalidateQueries({queryKey:s.routeStops(r)}),y.invalidateQueries({queryKey:s.route(r)}),y.invalidateQueries({queryKey:s.tripRoutes(r)})}})}function Rt(){return Q({mutationFn:async({routeId:t,stopId:e,data:r})=>w.updateRouteStop(t,e,r),onSuccess:t=>{U.route(t)},onSettled:(t,e,{routeId:r})=>{y.invalidateQueries({queryKey:s.routeStops(r)}),y.invalidateQueries({queryKey:s.route(r)}),y.invalidateQueries({queryKey:s.tripRoutes(r)})}})}function Tt(){return Q({mutationFn:({routeId:t,stopId:e})=>w.deleteRouteStop(t,e),onSuccess:(t,{routeId:e,stopId:r})=>{H.routeStop(e,r)},onSettled:(t,e,{routeId:r})=>{y.invalidateQueries({queryKey:s.routeStops(r)}),y.invalidateQueries({queryKey:s.route(r)}),y.invalidateQueries({queryKey:s.tripRoutes(r)})}})}export{$t as a,Ht as b,Bt as c,Wt as d,Nt as e,ct as f,Ot as g,Jt as h,jt as i,Gt as j,xt as k,Vt as l,Yt as m,Rt as n,Tt as o,It as p,Xt as q,Zt as r,Ut as s,V as t,zt as u};
